<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.kb.star.util.AdminDao">

	<!-- 메인 - 프로젝트 결재 현황 갯수 -->
	<select id="getReportCount" resultType="int">
	    SELECT COUNT(*) FROM Reports
	    WHERE IsChoice = #{isChoice}
	    <if test="isChoice == null">
	        OR IsChoice IS NULL
	    </if>
	</select>

	<!-- 모든 사용자 정보 가져오기 -->
    <select id="getUserList" resultType="com.kb.star.dto.AdminDto">
        SELECT u.UserID, u.UserName, u.Email, u.birth, u.IsDelete, d.DepartmentName, t.TeamName
        FROM Users u
        LEFT JOIN Departments d ON u.DepartmentID = d.DepartmentID
        LEFT JOIN Teams t ON u.TeamID = t.TeamID
        ORDER BY u.IsDelete ASC, d.DepartmentName ASC, t.TeamName ASC, u.UserName ASC
    </select>
    
	<!-- 베스트 사용횟수 팀 정보(팀ID, 팀이름, 사용횟수) 가져오기 -->
<!--     <select id="getBestUsage" resultType="com.kb.star.dto.AdminDto">
        SELECT t.TeamID, t.TeamName, TopTeams.TeamCount
        FROM Teams t
        JOIN (
	        SELECT TeamID, COUNT(*) AS TeamCount
	        FROM MeetingRooms
	        WHERE StageID = 6
	        GROUP BY TeamID
	        ORDER BY TeamCount DESC
	    ) AS TopTeams
	    ON t.TeamID = TopTeams.TeamID
	    ORDER BY TopTeams.TeamCount DESC
    </select> -->
    <!-- 베스트 사용횟수 팀 정보(팀ID, 팀이름, 사용횟수) + 채택률 가져오기 -->
	<select id="getBestApproved" resultType="com.kb.star.dto.AdminDto">
	    SELECT 
	        t.TeamName as teamName, 
	        COUNT(DISTINCT r.RoomID) as teamCount,
	        SUM(CASE WHEN r.IsChoice = 1 THEN 1 ELSE 0 END) as adoptedCount,
	        ROUND(SUM(CASE WHEN r.IsChoice = 1 THEN 1 ELSE 0 END) * 100.0 / NULLIF((SELECT COUNT(DISTINCT RoomID) FROM Reports), 0), 2) as adoptionRate
	    FROM 
	        Teams t
	    LEFT JOIN 
	        Users u ON t.TeamID = u.TeamID
	    LEFT JOIN 
	        Reports r ON u.UserID = r.UserID
	    GROUP BY 
	        t.TeamName
	    ORDER BY 
	        teamCount DESC
	</select>
	<!-- 팀별로 베스트 직원 목록(ID,이름,이미지)+토탈마일리지 가져오기 -->
	<select id="getBestEmployees" resultType="com.kb.star.dto.AdminDto">
	    SELECT u.UserID, u.UserName, u.ProfileImg, a.TotalContribution, t.TeamName
	    FROM Users u
	    JOIN (
	        SELECT UserID, SUM(ContributionCnt) AS TotalContribution
	        FROM MeetingRoomMembers
	        WHERE IsDelete = false
	        GROUP BY UserID
	    ) a ON u.UserID = a.UserID
	    JOIN Teams t ON u.TeamID = t.TeamID
	    WHERE u.IsDelete = false
	    <if test="teamName != null and teamName != ''">
	        AND t.TeamName = #{teamName}
	    </if>
	    ORDER BY a.TotalContribution DESC
	    LIMIT 5
	</select>
	
	
    <!-- 오늘의 결재 대기 보고서 가져오기 (작성자와 부서명 포함) -->
    <select id="getTodayReports" resultType="com.kb.star.dto.ReportLow">
        SELECT 
            r.ReportID, 
            r.ReportTitle, 
            r.IsChoice, 
            r.UpdatedAt,
            u.UserName AS authorName,
            d.DepartmentName
        FROM 
            Reports r
            JOIN Users u ON r.UserID = u.UserID
            JOIN Departments d ON u.DepartmentID = d.DepartmentID
        WHERE 
            DATE(r.UpdatedAt) = #{today}
        ORDER BY 
            r.UpdatedAt DESC
    </select>

    <!-- 연간 채택된 보고서 가져오기 (작성자와 부서명 포함) -->
    <select id="getYearlyAdoptedReports" resultType="com.kb.star.dto.ReportLow">
        SELECT 
            r.ReportID, 
            r.ReportTitle, 
            r.UpdatedAt,
            u.UserName AS authorName,
            d.DepartmentName,
            r.UserID AS authorId
        FROM 
            Reports r
            JOIN Users u ON r.UserID = u.UserID
            JOIN Departments d ON u.DepartmentID = d.DepartmentID
        WHERE 
            YEAR(r.UpdatedAt) = #{year} 
            AND r.IsChoice = 1
        ORDER BY 
            r.UpdatedAt DESC
    </select>
	<!-- 베스트 팀 -->
	    <select id="getBestTeams" resultType="com.kb.star.dto.TeamDto">
WITH departmentTotals AS (
    SELECT 
        d.DepartmentID,
        COUNT(CASE WHEN r.IsChoice = 1 THEN 1 END) as deptAdoptedReports,
        COUNT(CASE WHEN r.IsChoice IS NOT NULL THEN 1 END) as deptTotalReports
    FROM 
        Departments d
        JOIN Users u ON d.DepartmentID = u.DepartmentID
        LEFT JOIN Reports r ON u.UserID = r.UserID
    WHERE 
        r.IsChoice IS NOT NULL
    GROUP BY 
        d.DepartmentID
),
teamStats AS (
    SELECT 
        t.TeamID,
        t.TeamName,
        d.DepartmentName,
        COUNT(CASE WHEN r.IsChoice = 1 THEN 1 END) as teamAdoptedReports,
        COUNT(CASE WHEN r.IsChoice IS NOT NULL THEN 1 END) as teamTotalReports,
        dt.deptAdoptedReports,
        dt.deptTotalReports,
        CAST(COUNT(CASE WHEN r.IsChoice = 1 THEN 1 END) AS FLOAT) / 
            NULLIF(dt.deptAdoptedReports, 0) * 100 as teamAdoptionPercentage
    FROM 
        Teams t
        JOIN Users u ON t.TeamID = u.TeamID
        JOIN Departments d ON t.DepartmentID = d.DepartmentID
        LEFT JOIN Reports r ON u.UserID = r.UserID
        JOIN departmentTotals dt ON d.DepartmentID = dt.DepartmentID
    WHERE 
        r.IsChoice IS NOT NULL
    GROUP BY 
        t.TeamID, t.TeamName, d.DepartmentName, dt.deptAdoptedReports, dt.deptTotalReports
    HAVING 
        COUNT(CASE WHEN r.IsChoice IS NOT NULL THEN 1 END) > 0
)
SELECT 
    ts.*,
    DENSE_RANK() OVER (ORDER BY ts.teamAdoptionPercentage DESC) as teamRank
FROM 
    teamStats ts
ORDER BY 
    teamRank
LIMIT 3;
    </select>

</mapper>