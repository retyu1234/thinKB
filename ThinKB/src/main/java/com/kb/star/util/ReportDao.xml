<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kb.star.util.ReportDao">
	<!-- Reports 테이블에 RoomID가 존재하는지 확인 -->
	<select id="checkFinalReport" parameterType="int"
		resultType="int">
		SELECT COUNT(*)
		FROM Reports
		WHERE RoomID = #{roomId} and
		IsFinal = true
	</select>
	<!-- Reports 테이블에 데이터 삽입 -->
	<insert id="insertReport">
		INSERT INTO Reports (RoomID, UserID, ReportTitle,
		ReportContent, IsFinal)
		VALUES (#{roomId}, #{userId}, #{reportTitle},
		#{reportContent}, true)
	</insert>
	<!-- Reports 테이블의 데이터 업데이트 -->
	<update id="updateReport">
		UPDATE Reports
		SET ReportTitle = #{reportTitle},
		ReportContent = #{reportContent},
		UpdatedAt = CURRENT_TIMESTAMP
		WHERE
		RoomID = #{roomId} AND UserID = #{userId}
	</update>
	<!-- 최종보고서 작성 데이터 조회 기안자 빼고test -->
	<select id="getReportDetails" resultMap="reportDetailsResultMap"
		parameterType="int">
    SELECT
    r.ReportID,
    r.RoomID,
    r.UserID,
    r.ReportTitle,
    r.ReportContent,
    r.IsFinal,
    r.CreatedAt,
    r.UpdatedAt,
    d.DepartmentName,
    t.TeamName,
    rm.RoomTitle,
    u.UserName AS RoomManagerName,
    GROUP_CONCAT(DISTINCT mm.UserName SEPARATOR '/') AS YesPickUserNames
    FROM
    Reports r
    JOIN MeetingRooms rm ON r.RoomID = rm.RoomID
    JOIN Departments d ON rm.DepartmentID = d.DepartmentID
    JOIN Teams t ON rm.TeamID = t.TeamID
    JOIN Users u ON rm.RoomManagerID = u.UserID
    JOIN MeetingRoomMembers mrm ON r.RoomID = mrm.RoomID AND mrm.Role = 'yesPick' AND mrm.IsDelete = FALSE
    JOIN Users mm ON mrm.UserID = mm.UserID
    WHERE
    r.RoomID = #{roomId}
    GROUP BY r.ReportID, r.RoomID, r.UserID, r.ReportTitle, r.ReportContent, r.IsFinal, r.CreatedAt, r.UpdatedAt,
             d.DepartmentName, t.TeamName, rm.RoomTitle, u.UserName
    LIMIT 1
	</select>

	<resultMap id="reportDetailsResultMap"
		type="com.kb.star.dto.ReportDetailsDto">
		<id property="reportId" column="ReportID" />
		<result property="roomId" column="RoomID" />
		<result property="userId" column="UserID" />
		<result property="reportTitle" column="ReportTitle" />
		<result property="reportContent" column="ReportContent" />
		<result property="isFinal" column="IsFinal" />
		<result property="createdAt" column="CreatedAt" />
		<result property="updatedAt" column="UpdatedAt" />
		<result property="departmentName" column="DepartmentName" />
		<result property="teamName" column="TeamName" />
		<result property="roomTitle" column="RoomTitle" />
		<result property="roomManagerName" column="RoomManagerName" />
		<result property="yesPickUserNames" column="YesPickUserNames" />
	</resultMap>
	<!-- 보고서작성 최초 입장시 데이터없을때 -->
	<select id="getReportDetailsFirst"
		resultMap="meetingRoomDetailsResultMap" parameterType="int">
    SELECT
    mr.RoomID,
    mr.RoomTitle,
    d.DepartmentName,
    t.TeamName,
    u.UserName AS RoomManagerName,
    GROUP_CONCAT(mm_user.UserName SEPARATOR '/') AS YesPickUserNames
    FROM
    MeetingRooms mr
    JOIN Departments d ON mr.DepartmentID = d.DepartmentID
    JOIN Teams t ON mr.TeamID = t.TeamID
    JOIN Users u ON mr.RoomManagerID = u.UserID
    LEFT JOIN MeetingRoomMembers mrm ON mr.RoomID = mrm.RoomID AND mrm.Role = 'yesPick' AND mrm.IsDelete = FALSE
    LEFT JOIN Users mm_user ON mrm.UserID = mm_user.UserID
    WHERE
    mr.IsDelete = FALSE AND mr.RoomID = #{roomId}
    GROUP BY mr.RoomID, mr.RoomTitle, d.DepartmentName, t.TeamName, u.UserName;
	</select>
	<resultMap id="meetingRoomDetailsResultMap"
		type="com.kb.star.dto.ReportDetailsDto">
		<id property="roomId" column="RoomID" />
		<result property="roomTitle" column="RoomTitle" />
		<result property="departmentName" column="DepartmentName" />
		<result property="teamName" column="TeamName" />
		<result property="roomManagerName" column="RoomManagerName" />
		<result property="yesPickUserName" column="YesPickUserName" />
	</resultMap>
	<select id="getMyReportList" resultType="com.kb.star.dto.ReportsDto">
	    SELECT 
        r.ReportID AS reportId,
        r.RoomID AS roomId,
        r.UserID AS userId,
        r.ReportTitle AS reportTitle,
        r.ReportContent AS reportContent,
        r.IsFinal AS isFinal,
        r.CreatedAt AS createAt,
        r.UpdatedAt AS updateAt,
        mr.RoomTitle AS roomTitle,
        mr.StageID AS stageId,
        CASE 
            WHEN mr.StageID = 6 THEN '완료'
            WHEN mr.StageID = 5 then '작성중'
        END AS Status
    FROM 
        Reports r
    JOIN 
        MeetingRooms mr ON r.RoomID = mr.RoomID
    WHERE 
        r.UserID = #{userId}
        and mr.StageID>=5
    ORDER BY
    	r.UpdatedAt DESC
	</select>
<select id="getIdeaSummaries" resultMap="ideaSummaryResultMap">
    SELECT 
        i.IdeaID, 
        i.Title AS IdeaTitle, 
        io.OpinionText, 
        io.HatColor, 
        io.LikeNum,
        u.UserName AS OpinionUserName
    FROM 
        Ideas i
    JOIN 
        IdeaOpinions io ON i.IdeaID = io.IdeaID
    JOIN
        Users u ON io.UserID = u.UserID
    WHERE 
        i.RoomID = #{roomId}
        AND io.Step = 2
        AND io.IsDelete = 0
        AND i.IsDelete = 0
    ORDER BY 
        i.IdeaID, io.HatColor, io.LikeNum DESC
</select>

<resultMap id="ideaSummaryResultMap" type="com.kb.star.dto.IdeaSummaryDto">
    <id property="ideaId" column="IdeaID" />
    <result property="ideaTitle" column="IdeaTitle" />
    <result property="opinionText" column="OpinionText" />
    <result property="hatColor" column="HatColor" />
    <result property="likeNum" column="LikeNum" />
    <result property="opinionUserName" column="OpinionUserName" />
</resultMap>
<!-- 관리자 보고서 목록 -->
    <select id="getDepartmentReportList" resultType="com.kb.star.dto.DepartmentReportDto">
        SELECT 
            r.ReportID, 
            r.RoomID, 
            r.ReportTitle, 
            r.CreatedAt, 
            r.UpdatedAt, 
            r.IsChoice,
            u.UserName as AuthorName,
            t.TeamName,
            mr.RoomTitle
        FROM 
            Reports r
        JOIN 
            Users u ON r.UserID = u.UserID
        JOIN 
            Teams t ON u.TeamID = t.TeamID
        JOIN 
            MeetingRooms mr ON r.RoomID = mr.RoomID
        WHERE 
            u.DepartmentID = (SELECT DepartmentID FROM Users WHERE UserID = #{managerId})
        ORDER BY 
            r.UpdatedAt DESC
    </select>
<!-- 관리자 채택 -->
    <update id="approveReport">
        UPDATE Reports
        SET IsChoice = true
        WHERE ReportID = #{reportId}
    </update>
</mapper>